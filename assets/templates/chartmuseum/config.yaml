{{- /* https://github.com/helm/chartmuseum#configuration */ -}}
{{- /* https://github.com/goharbor/harbor/blob/master/make/photon/prepare/templates/chartserver/env.jinja */ -}}
allow.overwrite: true

auth.anonymous.get: false
basic.auth.user: chart_controller
bearerauth: 0

{{- $redisUrl := env.Getenv "cache_url" }}
{{- if gt ( len $redisUrl ) 0 }}
  {{- with (conv.URL $redisUrl) }}
cache: redis
cache.redis:
  addr: {{ quote .Host }}
  {{- if strings.Contains "@" . }}
    {{- /* cannot get password from $redis.User.Password, only a single non error result is permitted */ -}}
    {{- with ( index ( strings.SplitN "@" 2 ( index ( strings.SplitN "/" 2 ( index ( strings.SplitN "://" 2 .String ) 1 ) ) 0 ) ) 0 ) }}
  password: {{ index ( strings.SplitN ":" 2 . ) 1 | quote }}
    {{- end }}
  {{- end }}
  db: {{ conv.ToInt .Path }}
{{- end }}

context.path: ''

debug: true

depth: 1

disable:
  api: false
  delete: false
  force.overwrite: false
  metrics: false
  statefiles: false

index.limit: 0

log:
  health: false
  json: true

max:
  storage.objects: 0
  upload.size: 20971520

chart.post.form.field.name: chart
prov.post.form.field.name: prov

storage:
{{- range file.Walk ( env.Getenv "STORAGE_CONFIG" ) }}
  {{- if not ( file.IsDir . ) }}
  backend: {{ filepath.Base . | strings.quote }}
  {{- "\n" -}}{{ file.Read . | data.YAML | data.ToYAML | strings.Indent 1 "  " }}
  {{- end }}
{{- end }}
